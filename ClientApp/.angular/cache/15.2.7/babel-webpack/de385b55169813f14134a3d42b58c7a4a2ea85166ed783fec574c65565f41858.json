{"ast":null,"code":"import { Constants } from 'src/app/data/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/message-service/message.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../message/message.component\";\nfunction BodyComponent_app_message_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message\", 2);\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"message\", message_r1);\n  }\n}\nexport class BodyComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.messages = [];\n    this.messageService.message.subscribe(newMessage => {\n      this.messages.push(newMessage);\n      setTimeout(() => {\n        this.messages.shift();\n      }, Constants.messageLifetime + 1000);\n    });\n  }\n}\nBodyComponent.ɵfac = function BodyComponent_Factory(t) {\n  return new (t || BodyComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\nBodyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BodyComponent,\n  selectors: [[\"app-body\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"body\"], [3, \"message\", 4, \"ngFor\", \"ngForOf\"], [3, \"message\"]],\n  template: function BodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"router-outlet\");\n      i0.ɵɵtemplate(2, BodyComponent_app_message_2_Template, 1, 1, \"app-message\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterOutlet, i4.MessageComponent],\n  styles: [\".body[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: var(--body-color);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    padding-top: 50px;\\r\\n    position: relative;\\r\\n}\\r\\napp-login[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ib2R5L2JvZHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUNBQW1DO0lBQ25DLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9keSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJvZHktY29sb3IpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDUwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuYXBwLWxvZ2luIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,QAAQ,wBAAwB;;;;;;;;ICC9CC,iCAAgF;;;;IAAlCA,oCAAmB;;;ADQrE,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFlC,aAAQ,GAAc,EAAE;IAGtB,IAAI,CAACA,cAAc,CAACC,OAAO,CAACC,SAAS,CACnCC,UAAU,IAAG;MACX,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,UAAU,CAAC;MAC9BG,UAAU,CAAC,MAAK;QACd,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE;MACvB,CAAC,EAAEX,SAAS,CAACY,eAAe,GAAG,IAAI,CAAC;IACtC,CAAC,CACF;EACH;;AAbWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BhB,8BAAkB;MACdA,gCAA+B;MAC/BA,8EAAgF;MACpFA,iBAAM;;;MAD+BA,eAAW;MAAXA,sCAAW","names":["Constants","i0","BodyComponent","constructor","messageService","message","subscribe","newMessage","messages","push","setTimeout","shift","messageLifetime","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\LEGA-USER\\source\\repos\\InforceTask\\ClientApp\\src\\app\\components\\body\\body.component.ts","C:\\Users\\LEGA-USER\\source\\repos\\InforceTask\\ClientApp\\src\\app\\components\\body\\body.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Constants } from 'src/app/data/constants';\nimport { Message } from 'src/app/data/message';\nimport { MessageService } from 'src/app/services/message-service/message.service';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\nexport class BodyComponent {\n\n  messages: Message[] = [];\n\n  constructor(private messageService: MessageService) {\n    this.messageService.message.subscribe(\n      newMessage => {\n        this.messages.push(newMessage);\n        setTimeout(() => {\n          this.messages.shift();\n        }, Constants.messageLifetime + 1000);\n      }\n    );\n  }\n\n\n  \n}\n","<div class=\"body\">\n    <router-outlet></router-outlet>\n    <app-message *ngFor=\"let message of messages\" [message]=\"message\"></app-message>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}